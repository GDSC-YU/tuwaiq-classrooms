---
import { pwaInfo } from "virtual:pwa-info";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />

    <link rel="icon" href="/favicon.ico" sizes="any">
    <link rel="apple-touch-icon" href="/apple-touch-icon-180x180.png">
    <link rel="sitemap" href="/sitemap-index.xml" />

    <meta name="theme-color" content="#0a0a0a"/>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>

    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

  </head>
  <body class="overflow-x-hidden bg-neutral-950 text-slate-100">
    <slot />
    <script>
      import { registerSW } from "virtual:pwa-register";
      import Snackbar from "node-snackbar";

      // pwa stuff
      if ("serviceWorker" in navigator) {
        const updateSW = registerSW({
          onOfflineReady() {
            Snackbar.show({
              text: "Offline ready.",
              actionTextColor: '#ffffff',
            });
          },
          onNeedRefresh() {
            Snackbar.show({
              text: "Update available.",
              actionText: "Update",
              actionTextColor: '#ffffff',
              onActionClick: function () {
                updateSW(true);
              },
            });
          },
        });
      }
    </script>
  </body>
</html>
