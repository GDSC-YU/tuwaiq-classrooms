---
import Layout from "../../layouts/Layout.astro";
import { rooms } from "../../misc/rooms";
import ClassroomButton, {
  ClassroomButtonColor,
} from "../../components/ClassroomButton.astro";
import Header, { HeaderColor } from "../../components/Header";
import { Icon } from "astro-icon";

interface Props {
  corner: string;
}

const { corner } = Astro.params;

export function getStaticPaths() {
  return [
    { params: { corner: "E" } },
    { params: { corner: "F" } },
    { params: { corner: "G" } },
    { params: { corner: "H" } },
  ];
}

let color: ClassroomButtonColor;
let headerColor: HeaderColor;
let gridCols: string = " grid-cols-3 ";
switch (corner) {
  case "E":
    color = ClassroomButtonColor.paleBlue;
    headerColor = HeaderColor.paleBlue;
 
    break;
  case "F":
    color = ClassroomButtonColor.paleRed;
    headerColor = HeaderColor.paleRed;
    break;
  case "G":
    color = ClassroomButtonColor.paleYellow;
    headerColor = HeaderColor.paleYellow;
    break;
  case "H":
    color = ClassroomButtonColor.paleGreen;
    headerColor = HeaderColor.paleGreen;
    gridCols = " grid-cols-1 ";
    break;
}

let chosenRooms: Array<string> = [];
for (const key in rooms) {
  if (key.charAt(0) == corner) {
    chosenRooms.push(key);
  }
}
---

<Layout title={`${corner} Classrooms`}>
  <a href="../">
    <Icon name="ei:arrow-left" class="w-12 transition-all duration-400 hover:text-white"/>
  </a>
  <Header title={`${corner} Classrooms`} color={headerColor!} />
  <div class={"grid" + gridCols + "lg:grid-cols-5"}>
    {
      chosenRooms.map((chosenRoomName) => {
        return (
          <ClassroomButton
            text={chosenRoomName}
            color={color}
            href={`/classrooms/${chosenRoomName}`}
          />
        );
      })
    }
  </div>
</Layout>
